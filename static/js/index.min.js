import e from"./ContactService.min.js";let service=new e(window.API_BASE_PATH,e=>showSnackbar(e)),DOM={listContent:document.getElementById("list-content"),searchInput:document.getElementById("search-field"),searchBtn:document.getElementById("btn-search"),sortBtn:document.getElementById("btn-sort"),detailsNone:document.getElementById("details-none"),detailsView:document.getElementById("details-view"),detailsEdit:document.getElementById("details-edit"),detailsNew:document.getElementById("details-new"),container:document.querySelector(".container"),backBtn:document.getElementById("btn-back"),listNavigation:document.getElementById("list-navigation"),btnNew:document.getElementById("btn-new"),btnPrev:document.getElementById("btn-prev"),btnNext:document.getElementById("btn-next"),resultSummary:document.getElementById("result-summary"),viewName:document.getElementById("details-view-first"),viewOccupation:document.getElementById("details-view-occupation"),viewEmailList:document.querySelector("#details-view .email-container ul"),viewEmailContainer:document.querySelector("#details-view .email-container"),viewPhoneList:document.querySelector("#details-view .phone-container ul"),viewPhoneContainer:document.querySelector("#details-view .phone-container"),viewAddressList:document.querySelector("#details-view .address-container ul"),viewAddressContainer:document.querySelector("#details-view .address-container"),viewDetailsList:document.querySelector("#details-view .details-container ul"),editBtn:document.getElementById("btn-edit"),editFirstName:document.getElementById("details-edit-first"),editLastName:document.getElementById("details-edit-first-last"),editBirthdate:document.getElementById("details-edit-birthdate"),editOccupation:document.getElementById("details-edit-occupation"),editEmailList:document.querySelector("#details-edit .email-container ul"),editAddEmailBtn:document.querySelector("#details-edit .email-container .btn-input-list-add"),editPhoneList:document.querySelector("#details-edit .phone-container ul"),editAddPhoneBtn:document.querySelector("#details-edit .phone-container .btn-input-list-add"),editAddressList:document.querySelector("#details-edit .address-container ul"),editAddAddressBtn:document.querySelector("#details-edit .address-container .btn-input-list-add"),editNotes:document.getElementById("details-edit-notes"),editSaveBtn:document.querySelector("#details-edit .btn-save"),editCancelBtn:document.getElementById("btn-cancel"),editDeleteBtn:document.getElementById("btn-delete"),newFirstName:document.getElementById("details-new-first"),newLastName:document.getElementById("details-new-last"),newBirthdate:document.getElementById("details-new-birthdate"),newOccupation:document.getElementById("details-new-occupation"),newEmailList:document.querySelector("#details-new .email-container ul"),newAddEmailBtn:document.querySelector("#details-new .email-container .btn-input-list-add"),newPhoneList:document.querySelector("#details-new .phone-container ul"),newAddPhoneBtn:document.querySelector("#details-new .phone-container .btn-input-list-add"),newAddressList:document.querySelector("#details-new .address-container ul"),newAddAddressBtn:document.querySelector("#details-new .address-container .btn-input-list-add"),newNotes:document.getElementById("details-new-notes"),newSaveBtn:document.querySelector("#details-new .btn-save"),newCancelBtn:document.querySelector("#details-new .btn-cancel"),deleteDialog:document.getElementById("delete-confirm"),deleteConfirmBtn:document.getElementById("btn-confirm-delete"),deleteCancelBtn:document.getElementById("delete-cancel"),unsavedDialog:document.getElementById("unsaved-changes-dialog"),unsavedConfirmBtn:document.getElementById("unsaved-confirm"),unsavedCancelBtn:document.getElementById("unsaved-cancel"),snackbar:document.getElementById("snackbar"),loadingBar:document.getElementById("loading-bar")},currentContactId=null,isDescending=!1,pageCount=10,currentPage=1,totalPages=1,totalCount=0,activeController=null,isFormDirty=!1,CLIENT_BASE_PATH=window.CLIENT_BASE_PATH,TITLE_BASE="FriendFile";async function requestWrapper(e,t="Request failed"){showLoading(),activeController=new AbortController;try{let a=await e(activeController.signal);if(!a||"success"!==a.status)throw Error(t);return a}catch(i){return"AbortError"!==i.name&&(console.error(`Error: ${i.message}`),showSnackbar(i.message||t)),null}finally{activeController=null,hideLoading()}}function markFormDirty(){isFormDirty=!0}function resetFormDirty(){isFormDirty=!1}function confirmNavigation(e,t="",a=""){isFormDirty&&("flex"===DOM.detailsEdit.style.display||"flex"===DOM.detailsNew.style.display)?(DOM.unsavedDialog.showModal(),DOM.unsavedConfirmBtn.onclick=()=>{DOM.unsavedDialog.close(),resetFormDirty(),e(),(t||a)&&updateUrl(t,a)},DOM.unsavedCancelBtn.onclick=()=>DOM.unsavedDialog.close()):(e(),(t||a)&&updateUrl(t,a))}async function loadContactList(e=""){let t=await requestWrapper(t=>service.getContacts(pageCount,currentPage,e,isDescending,t),"Error loading contacts");DOM.listContent.innerHTML="";let a=0;if(t){if(t.data.forEach(e=>{let t=document.createElement("li");t.className=`list-item${e.id===currentContactId?" selected":""}`,t.dataset.id=e.id,t.textContent=`${e.firstName} ${e.lastName}`,t.setAttribute("role","option"),t.setAttribute("tabindex","0"),t.setAttribute("aria-selected",e.id===currentContactId?"true":"false"),t.addEventListener("click",()=>confirmNavigation(()=>showContactDetails(e.id),`/${e.id}`)),addKeyboardClick(t),DOM.listContent.appendChild(t)}),totalCount=t.meta.total,totalPages=Math.max(1,t.meta.totalPages),a=t.data.length,currentPage<1||currentPage>totalPages){updateUrl("",`search=${encodeURIComponent(e)}&page=${currentPage=1}&desc=${isDescending}`),await loadContactList(e);return}}else if(totalCount=0,totalPages=1,1!==currentPage){updateUrl("",`search=${encodeURIComponent(e)}&page=${currentPage=1}&desc=${isDescending}`),await loadContactList(e);return}updatePagination(totalPages),updateResultSummary(a,totalCount)}function updateResultSummary(e,t){DOM.resultSummary.textContent=0===t?"No items to show":t<=pageCount?`Showing ${t} of ${t} results`:`Showing ${(currentPage-1)*pageCount+1}-${Math.min(currentPage*pageCount,t)} of ${t} items`}async function showContactDetails(e){window.innerWidth<=750&&(window.scrollTo(0,0),DOM.container.classList.add("active"));let t=await requestWrapper(t=>service.getContact(e,t),"Error loading contact details");if(!t){showNoneMode(),updateUrl("");return}let a=t.data;if(currentContactId=e,setTitle("view",a),DOM.viewName.textContent=`${a.firstName} ${a.lastName||""}`,DOM.viewName.setAttribute("aria-label",`${a.firstName} ${a.lastName}`),a.occupation?(DOM.viewOccupation.textContent=a.occupation,DOM.viewOccupation.setAttribute("aria-label",a.occupation),DOM.viewOccupation.style.display="block"):(DOM.viewOccupation.textContent="",DOM.viewOccupation.removeAttribute("aria-label"),DOM.viewOccupation.style.display="none"),DOM.viewEmailList.innerHTML="",(a.emails||[]).forEach((e,t)=>{let a=document.createElement("li");a.className="input-list-item",a.innerHTML=`
            <div class="input-field outlined">
                <input id="view-email-${t}" type="text" value="${e}" readonly>
                <label for="view-email-${t}" class="active">Email</label>
            </div>
            <button class="btn-hover-input-list btn-input-list-copy" tabindex="0" title="Copy email" aria-label="Copy email"><i aria-hidden="true" class="material-icons">content_copy</i></button>
        `,a.querySelector(".btn-input-list-copy").addEventListener("click",()=>{navigator.clipboard.writeText(e),showSnackbar("Email copied")}),DOM.viewEmailList.appendChild(a)}),DOM.viewEmailContainer.classList.toggle("hidden",!a.emails||0===a.emails.length),DOM.viewPhoneList.innerHTML="",(a.phoneNumbers||[]).forEach((e,t)=>{let a=document.createElement("li");a.className="input-list-item",a.innerHTML=`
            <div class="input-field outlined">
                <input id="view-phone-${t}" type="text" value="${e.number}" readonly>
                <label for="view-phone-${t}" class="active">${e.type.charAt(0).toUpperCase()+e.type.slice(1)}</label>
            </div>
            <button class="btn-hover-input-list btn-input-list-copy" tabindex="0" title="Copy phone number" aria-label="Copy phone number"><i aria-hidden="true" class="material-icons">content_copy</i></button>
        `,a.querySelector(".btn-input-list-copy").addEventListener("click",()=>{navigator.clipboard.writeText(e.number),showSnackbar("Phone number copied")}),DOM.viewPhoneList.appendChild(a)}),DOM.viewPhoneContainer.classList.toggle("hidden",!a.phoneNumbers||0===a.phoneNumbers.length),DOM.viewAddressList.innerHTML="",(a.addresses||[]).forEach((e,t)=>{let a=document.createElement("li");a.className="input-list-item",a.innerHTML=`
            <div class="input-field outlined">
                <input id="view-address-${t}" type="text" value="${e.address}" readonly>
                <label for="view-address-${t}" class="active">${e.type.charAt(0).toUpperCase()+e.type.slice(1)}</label>
            </div>
            <button class="btn-hover-input-list btn-input-list-copy" tabindex="0" title="Copy address" aria-label="Copy address"><i aria-hidden="true" class="material-icons">content_copy</i></button>
        `,a.querySelector(".btn-input-list-copy").addEventListener("click",()=>{navigator.clipboard.writeText(e.address),showSnackbar("Address copied")}),DOM.viewAddressList.appendChild(a)}),DOM.viewAddressContainer.classList.toggle("hidden",!a.addresses||0===a.addresses.length),DOM.viewDetailsList.innerHTML="",a.birthdate){let i=document.createElement("li");i.className="input-list-item",i.innerHTML=`
            <div class="input-field outlined">
                <input id="view-birthdate-0" type="text" value="${a.birthdate}" readonly>
                <label for="view-birthdate-0" class="active">Birthdate</label>
            </div>
            <button class="btn-hover-input-list btn-input-list-copy" tabindex="0" title="Copy birthdate" aria-label="Copy birthdate"><i aria-hidden="true" class="material-icons">content_copy</i></button>
        `,i.querySelector(".btn-input-list-copy").addEventListener("click",()=>{navigator.clipboard.writeText(a.birthdate),showSnackbar("Birthdate copied")}),DOM.viewDetailsList.appendChild(i)}if(a.notes){let n=document.createElement("li");n.className="input-list-item",n.innerHTML=`
            <div class="input-field outlined">
                <input id="view-notes-0" type="text" value="${a.notes}" readonly>
                <label for="view-notes-0" class="active">Notes</label>
            </div>
            <button class="btn-hover-input-list btn-input-list-copy" tabindex="0" title="Copy notes" aria-label="Copy notes"><i aria-hidden="true" class="material-icons">content_copy</i></button>
        `,n.querySelector(".btn-input-list-copy").addEventListener("click",()=>{navigator.clipboard.writeText(a.notes),showSnackbar("Notes copied")}),DOM.viewDetailsList.appendChild(n)}DOM.viewDetailsList.parentElement.classList.toggle("hidden",0===DOM.viewDetailsList.childElementCount),showViewMode(),DOM.viewName.focus(),await loadContactList(DOM.searchInput.value)}async function saveContact(){let e=Array.from(DOM.editEmailList.querySelectorAll("input")),t=Array.from(DOM.editPhoneList.querySelectorAll(".input-list-item")),a=Array.from(DOM.editAddressList.querySelectorAll(".input-list-item")),i=[refreshValidityTextField(DOM.editFirstName),refreshValidityTextField(DOM.editLastName),refreshValidityTextField(DOM.editBirthdate),refreshValidityTextField(DOM.editOccupation),e.map(e=>refreshValidityTextField(e)).reduce((e,t)=>e&&t,!0),t.map(e=>refreshValidityTextField(e.querySelector("input"))).reduce((e,t)=>e&&t,!0),a.map(e=>refreshValidityTextField(e.querySelector("input"))).reduce((e,t)=>e&&t,!0),refreshValidityTextField(DOM.editNotes)];if(!i.reduce((e,t)=>e&&t,!0)){showSnackbar("Please correct all errors and try again.");return}let n={id:currentContactId,firstName:DOM.editFirstName.value,lastName:DOM.editLastName.value||"",birthdate:DOM.editBirthdate.value||"",occupation:DOM.editOccupation.value||"",emails:e.map(e=>e.value.trim()).filter(Boolean),phoneNumbers:t.map(e=>({type:e.querySelector(".btn-phone-type").dataset.phoneType,number:e.querySelector("input").value.trim()})).filter(e=>e.number),addresses:a.map(e=>({type:e.querySelector(".btn-address-type").dataset.addressType,address:e.querySelector("input").value.trim()})).filter(e=>e.address),notes:DOM.editNotes.value||""},r=await requestWrapper(e=>service.upsertContact(n,e),"Error saving contact");r&&(resetFormDirty(),await loadContactList(),await showContactDetails(n.id),updateUrl(`/${n.id}`),showSnackbar("Contact updated successfully"),DOM.btnNew.setAttribute("tabindex","0"))}async function createNewContact(){let e=Array.from(DOM.newEmailList.querySelectorAll("input")),t=Array.from(DOM.newPhoneList.querySelectorAll(".input-list-item")),a=Array.from(DOM.newAddressList.querySelectorAll(".input-list-item")),i=[refreshValidityTextField(DOM.newFirstName),refreshValidityTextField(DOM.newLastName),refreshValidityTextField(DOM.newBirthdate),refreshValidityTextField(DOM.newOccupation),e.map(e=>refreshValidityTextField(e)).reduce((e,t)=>e&&t,!0),t.map(e=>refreshValidityTextField(e.querySelector("input"))).reduce((e,t)=>e&&t,!0),a.map(e=>refreshValidityTextField(e.querySelector("input"))).reduce((e,t)=>e&&t,!0),refreshValidityTextField(DOM.newNotes)];if(!i.reduce((e,t)=>e&&t,!0)){showSnackbar("Please correct all errors and try again.");return}let n={id:0,firstName:DOM.newFirstName.value,lastName:DOM.newLastName.value||"",birthdate:DOM.newBirthdate.value||"",occupation:DOM.newOccupation.value||"",emails:e.map(e=>e.value.trim()).filter(Boolean),phoneNumbers:t.map(e=>({type:e.querySelector(".btn-phone-type").dataset.phoneType,number:e.querySelector("input").value.trim()})).filter(e=>e.number),addresses:a.map(e=>({type:e.querySelector(".btn-address-type").dataset.addressType,address:e.querySelector("input").value.trim()})).filter(e=>e.address),notes:DOM.newNotes.value||""},r=await requestWrapper(e=>service.upsertContact(n,e),"Error creating contact");if(r){resetFormDirty();let l=r.data;await loadContactList(DOM.searchInput.value),await showContactDetails(l.id),updateUrl(`/${l.id}`),showSnackbar("Contact added successfully"),DOM.btnNew.setAttribute("tabindex","0")}}async function deleteContact(){let e=await requestWrapper(e=>service.deleteContact(currentContactId,e),"Error deleting contact");e&&(await loadContactList(),showNoneMode(),window.innerWidth<=750&&DOM.container.classList.remove("active"),updateUrl(""),showSnackbar("Contact deleted successfully"))}function updatePagination(e){DOM.btnPrev.disabled=currentPage<=1,DOM.btnNext.disabled=currentPage>=e;let t=DOM.listNavigation.querySelector("ul"),a=t.offsetWidth-30,i=document.createElement("button");i.className="label-large",i.textContent="1",i.style.position="absolute",i.style.visibility="hidden",document.body.appendChild(i);let n=i.offsetWidth+8;document.body.removeChild(i);let r=Math.floor(a/n);if(t.innerHTML="",e<=r)for(let l=1;l<=e;l++){let s=document.createElement("li"),d=document.createElement("button");d.type="button",d.className=`label-large ${currentPage===l?"selected":""}`,d.disabled=currentPage===l,d.textContent=l,d.setAttribute("tabindex","0"),d.setAttribute("aria-label",`Go to page ${l}`),d.addEventListener("click",()=>changePage(l)),s.appendChild(d),t.appendChild(s)}else{let o=Math.max(1,currentPage-Math.floor((r-2)/2)),c=Math.min(e,o+r-3);if(c===e&&(o=Math.max(1,c-r+3)),o>2){let u=document.createElement("li"),p=document.createElement("button");p.type="button",p.className=`label-large ${1===currentPage?"selected":""}`,p.textContent="1",p.setAttribute("tabindex","0"),p.setAttribute("aria-label","Go to page 1"),p.addEventListener("click",()=>changePage(1)),u.appendChild(p),t.appendChild(u);let h=document.createElement("li"),m=document.createElement("button");m.type="button",m.className="label-large",m.textContent="...",m.disabled=!0,m.setAttribute("tabindex","-1"),h.appendChild(m),t.appendChild(h)}else if(2===o){let y=document.createElement("li"),D=document.createElement("button");D.type="button",D.className=`label-large ${1===currentPage?"selected":""}`,D.textContent="1",D.setAttribute("tabindex","0"),D.setAttribute("aria-label","Go to page 1"),D.addEventListener("click",()=>changePage(1)),y.appendChild(D),t.appendChild(y)}for(let b=o;b<=c;b++){let w=document.createElement("li"),v=document.createElement("button");v.type="button",v.className=`label-large ${currentPage===b?"selected":""}`,v.textContent=b,v.setAttribute("tabindex","0"),v.setAttribute("aria-label",`Go to page ${b}`),v.addEventListener("click",()=>changePage(b)),w.appendChild(v),t.appendChild(w)}if(c<e-1){let O=document.createElement("li"),g=document.createElement("button");g.type="button",g.className="label-large",g.textContent="...",g.disabled=!0,g.setAttribute("tabindex","-1"),O.appendChild(g),t.appendChild(O);let E=document.createElement("li"),C=document.createElement("button");C.type="button",C.className=`label-large ${currentPage===e?"selected":""}`,C.textContent=e,C.setAttribute("tabindex","0"),C.setAttribute("aria-label",`Go to page ${e}`),C.addEventListener("click",()=>changePage(e)),E.appendChild(C),t.appendChild(E)}else if(c===e-1){let f=document.createElement("li"),L=document.createElement("button");L.type="button",L.className=`label-large ${currentPage===e?"selected":""}`,L.textContent=e,L.setAttribute("tabindex","0"),L.setAttribute("aria-label",`Go to page ${e}`),L.addEventListener("click",()=>changePage(e)),f.appendChild(L),t.appendChild(f)}}}function changePage(e){e>=1&&e<=totalPages&&(currentPage=e,loadContactList(DOM.searchInput.value),updateUrl("",`search=${encodeURIComponent(DOM.searchInput.value)}&page=${currentPage}&desc=${isDescending}`))}function showViewMode(){DOM.detailsNone.style.display="none",DOM.detailsNone.setAttribute("aria-hidden","true"),DOM.detailsView.style.display="flex",DOM.detailsView.setAttribute("aria-hidden","false"),DOM.detailsEdit.style.display="none",DOM.detailsEdit.setAttribute("aria-hidden","true"),DOM.detailsNew.style.display="none",DOM.detailsNew.setAttribute("aria-hidden","true"),DOM.editBtn.setAttribute("tabindex","0"),DOM.btnNew.setAttribute("tabindex","0")}async function showEditView(){let e=await requestWrapper(e=>service.getContact(currentContactId,e),"Error loading contact for edit");if(!e)return;let t=e.data;setTitle("edit",t),destroyDropdownInstances(DOM.editPhoneList),destroyDropdownInstances(DOM.editAddressList),destroyCharacterCounters(DOM.editEmailList),destroyCharacterCounters(DOM.editPhoneList),destroyCharacterCounters(DOM.editAddressList),DOM.editFirstName.value=t.firstName,DOM.editLastName.value=t.lastName||"",DOM.editBirthdate.value=t.birthdate||"",DOM.editOccupation.value=t.occupation||"",DOM.editEmailList.innerHTML="",(t.emails||[]).forEach(e=>addEmailField(DOM.editEmailList,e)),DOM.editPhoneList.innerHTML="",(t.phoneNumbers||[]).forEach(e=>addPhoneField(DOM.editPhoneList,e.number,e.type)),DOM.editAddressList.innerHTML="",(t.addresses||[]).forEach(e=>addAddressField(DOM.editAddressList,e.address,e.type)),DOM.editNotes.value=t.notes||"",DOM.detailsNone.style.display="none",DOM.detailsNone.setAttribute("aria-hidden","true"),DOM.detailsView.style.display="none",DOM.detailsView.setAttribute("aria-hidden","true"),DOM.detailsEdit.style.display="flex",DOM.detailsEdit.setAttribute("aria-hidden","false"),DOM.detailsNew.style.display="none",DOM.detailsNew.setAttribute("aria-hidden","true"),DOM.editBtn.setAttribute("tabindex","0"),DOM.btnNew.setAttribute("tabindex","-1"),window.innerWidth<=750&&DOM.container.classList.add("active"),resetFormDirty()}function showNewView(){destroyDropdownInstances(DOM.newPhoneList),destroyDropdownInstances(DOM.newAddressList),destroyCharacterCounters(DOM.newEmailList),destroyCharacterCounters(DOM.newPhoneList),destroyCharacterCounters(DOM.newAddressList),DOM.newFirstName.value="",DOM.newLastName.value="",DOM.newBirthdate.value="",DOM.newOccupation.value="",DOM.newEmailList.innerHTML="",DOM.newPhoneList.innerHTML="",DOM.newAddressList.innerHTML="",DOM.newNotes.value="",DOM.detailsNone.style.display="none",DOM.detailsNone.setAttribute("aria-hidden","true"),DOM.detailsView.style.display="none",DOM.detailsView.setAttribute("aria-hidden","true"),DOM.detailsEdit.style.display="none",DOM.detailsEdit.setAttribute("aria-hidden","true"),DOM.detailsNew.style.display="flex",DOM.detailsNew.setAttribute("aria-hidden","false"),window.innerWidth<=750&&DOM.container.classList.add("active"),DOM.editBtn.setAttribute("tabindex","-1"),DOM.btnNew.setAttribute("tabindex","0"),DOM.newFirstName.focus(),resetFormDirty()}function showNoneMode(){destroyDropdownInstances(DOM.editPhoneList),destroyDropdownInstances(DOM.editAddressList),destroyDropdownInstances(DOM.newPhoneList),destroyDropdownInstances(DOM.newAddressList),destroyCharacterCounters(DOM.editEmailList),destroyCharacterCounters(DOM.editPhoneList),destroyCharacterCounters(DOM.editAddressList),destroyCharacterCounters(DOM.newEmailList),destroyCharacterCounters(DOM.newPhoneList),destroyCharacterCounters(DOM.newAddressList),DOM.detailsNone.style.display="flex",DOM.detailsNone.setAttribute("aria-hidden","false"),DOM.detailsView.style.display="none",DOM.detailsView.setAttribute("aria-hidden","true"),DOM.detailsEdit.style.display="none",DOM.detailsEdit.setAttribute("aria-hidden","true"),DOM.detailsNew.style.display="none",DOM.detailsNew.setAttribute("aria-hidden","true"),currentContactId=null,loadContactList(DOM.searchInput.value),DOM.editBtn.setAttribute("tabindex","-1"),DOM.btnNew.setAttribute("tabindex","0")}function addEmailField(e,t=""){if(e.lastElementChild&&""===e.lastElementChild.querySelector("input").value){e.lastElementChild.querySelector("input").focus();return}let a=document.createElement("li");a.className="input-list-item",a.innerHTML=`
        <div class="input-field outlined">
            <input type="email" value="${t}" placeholder="Enter email" aria-label="Enter email" maxlength="50">
            <p class="supporting-text error">Invalid email</p>
        </div>
        <button type="button" class="btn-hover-input-list btn-input-list-delete" title="Delete" aria-label="Delete email"><i aria-hidden="true" class="material-icons">delete</i></button>
    `;let i=a.querySelector("input");a.querySelector("button").addEventListener("click",()=>{destroyCharacterCounter(i),a.remove()}),addValidationToTextField(i),i.addEventListener("input",markFormDirty),M.CharacterCounter.init(i),e.appendChild(a),i.focus()}function addPhoneField(e,t="",a="personal"){if(e.lastElementChild&&""===e.lastElementChild.querySelector("input").value){e.lastElementChild.querySelector("input").focus();return}let i=e.childElementCount,n=`dropdown-phone-type-${i}`,r=`btn-phone-type-${i}`,l=document.createElement("li");l.className="input-list-item",l.innerHTML=`
        <div class="input-field outlined">
            <button class="dropdown-trigger btn-small outlined waves-effect waves-light btn-phone-type" id="${r}" data-target="${n}" data-phone-type="${a}" title="Choose phone type" aria-label="Choose phone type" aria-expanded="false">${a.charAt(0).toUpperCase()+a.slice(1)}</button>
            <ul id="${n}" class="dropdown-content">
                <li data-phone-type="personal" tabindex="0" role="option">Personal</li>
                <li data-phone-type="work" tabindex="0" role="option">Work</li>
                <li data-phone-type="home" tabindex="0" role="option">Home</li>
            </ul>
            <input type="tel" value="${t}" placeholder="Enter phone" aria-label="Phone number" pattern="[A-Za-z0-9\\s\\-\\.\\(\\)\\+]+" maxlength="50">
            <p class="supporting-text error">Invalid characters</p>
        </div>
        <button type="button" class="btn-hover-input-list btn-input-list-delete" title="Delete" aria-label="Delete phone"><i aria-hidden="true" class="material-icons">delete</i></button>
    `,e.appendChild(l);let s=l.querySelector(`#${r}`),d=M.Dropdown.init(s,{constrainWidth:!1,coverTrigger:!1,onOpenStart:()=>s.setAttribute("aria-expanded","true"),onCloseEnd:()=>s.setAttribute("aria-expanded","false")}),o=l.querySelector("input");l.querySelector(".btn-input-list-delete").addEventListener("click",()=>{d&&d.destroy(),destroyCharacterCounter(o),l.remove()});let c=l.querySelectorAll(`#${n} li`);c.forEach(e=>{e.addEventListener("click",t=>{t.preventDefault();let a=e.dataset.phoneType;a&&(s.setAttribute("data-phone-type",a),s.textContent=a.charAt(0).toUpperCase()+a.slice(1),d&&d.close(),o.focus())}),addKeyboardClick(e)}),addValidationToTextField(o),o.addEventListener("input",markFormDirty),M.CharacterCounter.init(o),addSubmitOnEnter(o),o.focus()}function addAddressField(e,t="",a="home"){if(e.lastElementChild&&""===e.lastElementChild.querySelector("input").value){e.lastElementChild.querySelector("input").focus();return}let i=e.childElementCount,n=`dropdown-address-type-${i}`,r=`btn-address-type-${i}`,l=document.createElement("li");l.className="input-list-item",l.innerHTML=`
        <div class="input-field outlined">
            <button class="dropdown-trigger btn-small outlined waves-effect waves-light btn-address-type" id="${r}" data-target="${n}" data-address-type="${a}" title="Choose address type" aria-label="Choose address type" aria-expanded="false">${a.charAt(0).toUpperCase()+a.slice(1)}</button>
            <ul id="${n}" class="dropdown-content">
                <li data-address-type="home" tabindex="0" role="option">Home</li>
                <li data-address-type="work" tabindex="0" role="option">Work</li>
            </ul>
            <input type="text" value="${t}" placeholder="Enter address" aria-label="Address" pattern="[A-Za-z0-9\\s\\-\\.\\(\\)\\+\\,]+" maxlength="100">
            <p class="supporting-text error">Invalid characters</p>
        </div>
        <button type="button" class="btn-hover-input-list btn-input-list-delete" title="Delete" aria-label="Delete address"><i aria-hidden="true" class="material-icons">delete</i></button>
    `,e.appendChild(l);let s=l.querySelector(`#${r}`),d=M.Dropdown.init(s,{constrainWidth:!1,coverTrigger:!1,onOpenStart:()=>s.setAttribute("aria-expanded","true"),onCloseEnd:()=>s.setAttribute("aria-expanded","false")}),o=l.querySelector("input");l.querySelector(".btn-input-list-delete").addEventListener("click",()=>{d&&d.destroy(),destroyCharacterCounter(o),l.remove()});let c=l.querySelectorAll(`#${n} li`);c.forEach(e=>{e.addEventListener("click",t=>{t.preventDefault();let a=e.dataset.addressType;a&&(s.setAttribute("data-address-type",a),s.textContent=a.charAt(0).toUpperCase()+a.slice(1),d&&d.close(),o.focus())}),addKeyboardClick(e)}),addValidationToTextField(o),o.addEventListener("input",markFormDirty),M.CharacterCounter.init(o),addSubmitOnEnter(o),o.focus()}function showSnackbar(e){DOM.snackbar.textContent=e,DOM.snackbar.classList.add("show"),setTimeout(()=>DOM.snackbar.classList.remove("show"),3e3)}function showLoading(){DOM.loadingBar.style.display="block"}function hideLoading(){DOM.loadingBar.style.display="none"}function updateUrl(e,t=""){let a=`${CLIENT_BASE_PATH}${e}`.replace(/\/+$/,""),i=t?`${a}?${t}`:a;window.history.pushState({},document.title,i),setPageTitle(e,t)}async function parseInitialUrl(){let e=window.location.pathname.replace(CLIENT_BASE_PATH,""),t=new URLSearchParams(window.location.search);if(setPageTitle(e,window.location.search),""===e||"/"===e)t.has("search")?(DOM.searchInput.value=t.get("search")||"",currentPage=parseInt(t.get("page")||"1",10),isDescending="true"===t.get("desc"),DOM.sortBtn.setAttribute("aria-label",`Sort ${isDescending?"ascending":"descending"}`),DOM.sortBtn.querySelector(".sort-text").textContent=isDescending?"Desc":"Asc",DOM.sortBtn.querySelector("i").textContent=isDescending?"arrow_downward":"arrow_upward",await loadContactList(DOM.searchInput.value)):showNoneMode();else if(/^\/\d+$/.test(e)){let a=parseInt(e.slice(1),10);await showContactDetails(a)}else"/new"===e?showNewView():(showNoneMode(),showSnackbar("Invalid URL path"))}function setTitle(e,t=null,a=!1){a?document.title=`Search - ${TITLE_BASE}`:"new"===e?document.title=`New - ${TITLE_BASE}`:"view"===e||"edit"===e?t&&t.firstName&&t.lastName?document.title=`${t.firstName} ${t.lastName} - ${TITLE_BASE}`:DOM.viewName.textContent&&"view"===e?document.title=`${DOM.viewName.textContent} - ${TITLE_BASE}`:DOM.editFirstName.value&&DOM.editLastName.value&&"edit"===e?document.title=`${DOM.editFirstName.value.trim()} ${DOM.editLastName.value.trim()} - ${TITLE_BASE}`:document.title=TITLE_BASE:document.title=TITLE_BASE}function setPageTitle(e,t=""){let a=t&&t.includes("search=");""===e||"/"===e?setTitle("home",null,a):"/new"===e?setTitle("new"):/^\/\d+$/.test(e)?setTitle("flex"===DOM.detailsEdit.style.display?"edit":"view"):setTitle("notfound")}function validationOnFocusOut(e,t){e.addEventListener("focusout",a=>{t(a.target)?e.parentElement.classList.remove("error"):e.parentElement.classList.add("error")})}function cleanInputValue(e){let t=e.value;t=t.trim().replace(/[\n\t\r\u00A0]+/g," ").replace(/\s+/g," "),e.value=t}function addValidationToTextField(e){validationOnFocusOut(e,e=>(cleanInputValue(e),e.checkValidity())),e.addEventListener("invalid",t=>{t.preventDefault(),e.parentElement.classList.add("error")}),e.addEventListener("input",()=>{e.checkValidity()&&e.parentElement.classList.remove("error")})}function refreshValidityTextField(e){return(cleanInputValue(e),e.checkValidity())?(e.parentElement.classList.remove("error"),!0):(e.parentElement.classList.add("error"),!1)}function destroyDropdownInstances(e){let t=e.querySelectorAll(".dropdown-trigger");t.forEach(e=>{let t=M.Dropdown.getInstance(e);t&&t.destroy()})}function destroyCharacterCounter(e){let t=M.CharacterCounter.getInstance(e);t&&t.destroy()}function destroyCharacterCounters(e){let t=e.querySelectorAll("input, textarea");t.forEach(e=>destroyCharacterCounter(e))}function addKeyboardClick(e){e.addEventListener("keydown",t=>{("Enter"===t.key||" "===t.key)&&(t.preventDefault(),e.click())})}function addSubmitOnEnter(e){e.addEventListener("keydown",e=>{"Enter"===e.key&&(e.preventDefault(),e.target.closest("form").querySelector("button[type=submit]").click())})}document.addEventListener("DOMContentLoaded",async()=>{showLoading(),await parseInitialUrl(),M.CharacterCounter.init([DOM.searchInput,DOM.editFirstName,DOM.editLastName,DOM.editOccupation,DOM.editNotes,DOM.newFirstName,DOM.newLastName,DOM.newOccupation,DOM.newNotes]),hideLoading()}),window.addEventListener("popstate",async()=>{showLoading(),await parseInitialUrl(),hideLoading()}),DOM.searchBtn.addEventListener("click",()=>{currentPage=1,loadContactList(DOM.searchInput.value),updateUrl("",`search=${encodeURIComponent(DOM.searchInput.value)}&page=${currentPage}&desc=${isDescending}`)}),DOM.searchInput.addEventListener("keypress",e=>{"Enter"===e.key&&(currentPage=1,loadContactList(DOM.searchInput.value),updateUrl("",`search=${encodeURIComponent(DOM.searchInput.value)}&page=${currentPage}&desc=${isDescending}`))}),DOM.sortBtn.addEventListener("click",async()=>{if(isDescending=!isDescending,DOM.sortBtn.setAttribute("aria-label",`Sort ${isDescending?"ascending":"descending"}`),DOM.sortBtn.querySelector(".sort-text").textContent=isDescending?"Desc":"Asc",DOM.sortBtn.querySelector("i").textContent=isDescending?"arrow_downward":"arrow_upward",currentContactId){let e=await requestWrapper(e=>service.getContacts(pageCount,1,DOM.searchInput.value,isDescending,e),"Error sorting contacts");if(e){let t=e.data,a=t.findIndex(e=>e.id===currentContactId);currentPage=a>=0?Math.ceil((a+1)/pageCount):1}}await loadContactList(DOM.searchInput.value),updateUrl("",`search=${encodeURIComponent(DOM.searchInput.value)}&page=${currentPage}&desc=${isDescending}`)}),DOM.editBtn.addEventListener("click",()=>currentContactId&&confirmNavigation(()=>showEditView(),`/${currentContactId}`)),DOM.detailsEdit.addEventListener("submit",e=>e.preventDefault()),DOM.editSaveBtn.addEventListener("click",e=>{e.preventDefault(),saveContact()}),DOM.editCancelBtn.addEventListener("click",()=>confirmNavigation(()=>showViewMode(),currentContactId?`/${currentContactId}`:"")),DOM.editDeleteBtn.addEventListener("click",()=>DOM.deleteDialog.showModal()),DOM.deleteConfirmBtn.addEventListener("click",()=>{DOM.deleteDialog.close(),deleteContact()}),DOM.deleteCancelBtn.addEventListener("click",()=>DOM.deleteDialog.close()),DOM.deleteDialog.addEventListener("click",e=>e.target===DOM.deleteDialog&&DOM.deleteDialog.close()),DOM.detailsNew.addEventListener("submit",e=>e.preventDefault()),DOM.newSaveBtn.addEventListener("click",e=>{e.preventDefault(),createNewContact()}),DOM.newCancelBtn.addEventListener("click",()=>confirmNavigation(()=>{DOM.container.classList.remove("active"),showNoneMode()},"/")),DOM.backBtn.addEventListener("click",()=>confirmNavigation(()=>{DOM.container.classList.remove("active"),showNoneMode(),setTitle("home")},"")),DOM.btnNew.addEventListener("click",()=>confirmNavigation(()=>showNewView(),"/new")),DOM.btnPrev.addEventListener("click",()=>changePage(currentPage-1)),DOM.btnNext.addEventListener("click",()=>changePage(currentPage+1)),DOM.editAddEmailBtn.addEventListener("click",()=>addEmailField(DOM.editEmailList)),DOM.newAddEmailBtn.addEventListener("click",()=>addEmailField(DOM.newEmailList)),DOM.editAddPhoneBtn.addEventListener("click",()=>addPhoneField(DOM.editPhoneList)),DOM.newAddPhoneBtn.addEventListener("click",()=>addPhoneField(DOM.newPhoneList)),DOM.editAddAddressBtn.addEventListener("click",()=>addAddressField(DOM.editAddressList)),DOM.newAddAddressBtn.addEventListener("click",()=>addAddressField(DOM.newAddressList)),DOM.listNavigation.addEventListener("resize",()=>updatePagination(totalPages)),DOM.detailsNew.querySelectorAll("input").forEach(e=>addSubmitOnEnter(e)),DOM.detailsEdit.querySelectorAll("input").forEach(e=>addSubmitOnEnter(e)),[DOM.detailsEdit,DOM.detailsNew].forEach(e=>{e.querySelectorAll("input, textarea").forEach(e=>{e.addEventListener("input",markFormDirty),addValidationToTextField(e)})}),[DOM.newBirthdate,DOM.editBirthdate].forEach(e=>e.max=new Date().toISOString().split("T")[0]);
